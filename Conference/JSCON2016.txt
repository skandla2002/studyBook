<index>

Reactive, Component 그리고 AngularJS 2.0
  - 컴포넌트 기반의 개발과 리엑티브 기반의 데이터 처리 그리고 보다 편리한 개발환경을 제공하는 AngularJS 2.0을 소개합니다.
ECMA2015 Inside
  - ECMA2015의 언어적 의미를 파헤쳐보기.
Webpack 실무 적용전략
  - 최근들어 es2015의 확산과 더불어 webpack 을 이용한 모듈 번들링을 도입하는 곳이 늘고 있습니다. webpack은 강력한 기능들을 지원하지만 초반 학습곡선이 높은 편입니다. 어떻게 하면 보다 쉽게 실무에 webpack을 적용할 수 있는지 등에 대해 설명하는 세션이 될 것입니다.
react.js 실 서비스 적용하기
  - travel.coupang.com 을 개발하면서 적용했던 Front End 기술셋, 사용한 테스트 도구, Back End와의 조합, 도입 후 얻은 이점과 좀 더 개선해야할 점, 도입 시 주의사항, 그리고 팀원들의 작업 후기를 나누고자 합니다.
React Native in Production
  - React Native 로 새로운 서비스를 개발하는 과정에서 느낀 장단점을 중심으로 왜 채택하였는지, 어떠한 프로젝트에 적합한지 등을 이야기합니다. 실제 라이브 서비스에서 개발/운영하는 경험담을 위주로 React Native 에 대해 소개합니다.
spring과 nodejs의 공존 <시즌2> 
  - 자바스크립트 템플릿 엔진을 자바에서 사용하기, react isomorphic 렌더링 without nodejs
  
</index>

1. Reactive : reactive programing은 비동기 데이터 스트림을 프로그래밍 한다.
              https://gist.github.com/staltz/868e7e9bc2a7b8c1f754
   Component : 
              http://callmenick.com/post/javascript-objects-building-javascript-component-part-1
              http://callmenick.com/post/javascript-objects-building-javascript-component-part-2
   AngularJS 2.0 :   
              https://angular.io/docs/ts/latest/quickstart.html#!#prereq         
           